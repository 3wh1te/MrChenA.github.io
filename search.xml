<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[马克思主义哲学]]></title>
    <url>%2F2017%2F05%2F20%2F%E9%A9%AC%E5%85%8B%E6%80%9D%E4%B8%BB%E4%B9%89%E5%93%B2%E5%AD%A6%2F</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title><![CDATA[活法]]></title>
    <url>%2F2017%2F05%2F20%2F%E6%B4%BB%E6%B3%95%2F</url>
    <content type="text"><![CDATA[1.人生的意义或价值何在？人为什么而活？目的是什么？总得为自己活着找个明确的理由，否则你的一生就是混乱的，动荡的。 2.提升心性，磨练灵魂（禅宗一直强调的就是磨练自己的心性，但是为何要磨练自己的心性，灵魂又为何物？），每个人肯定是为了追求幸福而活的，幸福是什么？简单的快乐吗？看似好像没那么简单。可以肯定的是，“提升心性，磨练灵魂”是禅宗获得幸福的途径，仔细想一想，能决定看你是否幸福快乐的，很大一部分是你自己心态，往往心态崩了，人生也就随之崩塌，也就是说所谓“提升心性，磨练灵魂”可能就是培养一颗强大的心，不以物喜，不以己悲，不会患得患失，时刻保持平和的心态，摆脱三毒（痴、嗔、贪）。所谓痴，就是嫉妒、憎恨、不满；所谓嗔，就是恼怒；所谓贪，便是欲望。人生不幸福，很大程度上是因为，这三毒充斥着自己的生活，所以说人生的意义就在于“提升心性，磨练灵魂”，似乎很有道理。（有人说，我就要出人头地，世人敬仰，这样我也会很快乐，很幸福，我不知道这样算不算执迷不悟，我觉得人生最重要的就是做事情，踏实做自己喜欢的事情，而不是拔城攻寨，整天想着去搞个大新闻，我觉得梦想和目标是要分开的，转念一想，万事讲究过犹不及，适度而为，三毒不能一棒子打死，适度的骄傲和不满为促进自己的进步，有梦想也要有目标，切不可做事情忘掉初衷，抛弃梦想，只谈目标，这样势必会走向歪门邪道）3.个人做事都应该有一个底线和原则，可以是道德，可以是法律，我决定应该比这连个更高，有可能你达不到社会主义核心价值观，但你应该努力。4.做事要精进，专注。5.]]></content>
      <tags>
        <tag>reading note</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CryptoLock Stopping Ransomware Attacks on User Data]]></title>
    <url>%2F2017%2F05%2F15%2FCryptoLock-Stopping-Ransomware-Attacks-on-User-Data%2F</url>
    <content type="text"><![CDATA[目录 介绍和相关工作 标识 实现 实验评估 一、介绍和相关工作1、现状 加密的数据是可恢复的（和破坏性的恶意软件不同） 通过比特币进行匿名支付 存在了将近十年 每年几百万美元的损失 法律机构收到侵害，损失重要文件（只能选择支付） 2、难点 这种恶意软件容易上手 通过行为难以区分是否为恶意软件 主要面向小白用户（从不会数据备份） 3、论文所做工作 Develp an early-warning system：第一个检测用户数据变化的检测系统，目的不是一个文件都不损失，而是损失一部分来发现恶意行为，终止行为。基于Windows平台。 Indentify three primary indicators：找到三个主要行为标识来标识这种恶意行为 Extensive analysis：正确率比较高（误判几乎为0，只有0.2%的文件损失）、健壮性好大大减少了文件损失和攻击者的利润。 4、相关工作现存的技术区分程序是否为恶意软件，主要依靠两个特性：(异常检测的IDE系统使用的就是不同的机器学习和数据分析技术来甄别)&ensp; &ensp;1.什么是恶意软件 &ensp; &ensp; 2.恶意软件做什么 特征匹配（signature matching）没出现过的恶意软件就很难检测。逃避特征、自动打包技术 文件的完整性检测：（基于简单的hash值比较）文件出现变动就回提醒，无法区分合法or恶意，难用！ Andronio等人开发了一个Android平台上的检测工具（结合了动态和静态分析技术，如检测加密函数的调用和线程信息），桌面平台不好用。 本文的系统检测用户数据的变化，检测用户数据如何变化，注重于补救。 二、RANSOMWARE INDICATORS1、三类Ransomware A类：重写文件内容，打开文件、读内容、加密、替换信息、关闭文件。 B类：继承A，把文件移出，干完活再移进来 C类：打开文件，读文件，加密成一个新的文件，删除原来的文件。（独立的读写流） &ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;忽略不直接修改文件的操作，如写随机数（防止数据恢复）等2、File Type Changes&ensp;&ensp;这些签名描述了文件类型唯一的特定字节值的顺序和位置，而不仅仅是文件头部信息。由于文件通常在其存在过程中保持其文件类型和格式，所以对这些数据进行批量修改的行为是值得怀疑的行为。 &ensp;&ensp;利用The file utility 检测文件类型的改变，但是并不是所有的类型改变都是恶意的，有可能是程序更新。比如doc→docx 3、Similarity Measurement4、Shannon Entropy5、Secondary Indicators Union Indication6、Union Indication7、Indicator Evasion参考文献 [1]OPF format corpus. http://openpreservation.org/technology/corpora/opf-format-corpus/. [2] N. Agrawal, W. J. Bolosky, J. R. Douceur, and J. R. Lorch. A five-year study offile-system metadata. ACM Transactions on Storage (TOS), 2007. [3] N. Andronio, S. Zanero, and F. Maggi. HelDroid: Dissecting and detecting mobile ransomware. In Proceedings of the International Symposium on Research inAttacks, Intrusion and Detection (RAID), 2015. [4] E. Arnold. Tennessee sheriff pays ransom to cybercriminals,in bitcoin. http://www.bizjournals.com/memphis/blog/2014/11/tennessee-sheriff-pays-ransom-to-cybercriminals-in.html, 2014. [5] S. Axelsson. The base-rate fallacy and its implications for the difficulty ofintrusion detection. In Proceedings of the ACM Conference on Computer andCommunications Security (CCS), 1999. [6] D. Carrigan. Police departments hit by ransomware virus. http://www.wcsh6.com/story/news/local/2015/04/10/police-departments-hit-by-ransomware-virus/25593777/, 2015. [7] S. Chakradeo, B. Reaves, P. Traynor, and W. Enck. MAST: Triage for marketscalemobile malware analysis. In Proceedings of ACM Conference on Securityand Privacy in Wireless and Mobile Networks (WiSec). ACM, 2013. [8] V. Chandola, A. Banerjee, and V. Kumar. Anomaly detection: A survey. ACMComput. Surv., 41(3), 2009. [9] X. Chen, J. Andersen, Z. M. Mao, M. Bailey, and J. Nazario. Towards an understandingof anti-virtualization and anti-debugging behavior in modern malware.In IEEE International Conference on Dependable Systems and Networks, 2008. [10] N. Coldwell. Comparison of audio compression. http://nigelcoldwell.co.uk/audio/. [11] D. Common. Ransomware victims pay cybercriminalsto save family photos. http://www.cbc.ca/news/technology/ransomware-victims-pay-cybercriminals-to-save-family-photos-1.2962106,2015. [12] Cuckoo Foundation. Automated malware analysis - cuckoo sandbox. http://www.cuckoosandbox.org/. [13] C. Cuevas and C. Shaffer. Raising the white flag. http://www.shmoocon.org/2012/videos/ShafferCuevas-RaisingTheWhiteFlag.m4v, 2012. Presented at ShmooCon. [14] T. Dewan. Teslacrypt joins ransomware field. https://blogs.mcafee.com/mcafee-labs/teslacrypt-joins-ransomware-field, 2015. [15] C. J. Dietrich, C. Rossow, and N. Pohlmann. Exploiting visual appearance tocluster and detect rogue software. In Proceedings of the ACM Symposium onApplied Computing. ACM, 2013. [16] J. R. Douceur and W. J. Bolosky. A large-scale study of file-system contents. InProceedings of the ACM SIGMETRICS International Conference on Measurementand Modeling of Computer Systems, 1999. [17] S. Forrest, S. A. Hofmeyr, A. Somayaji, and T. A. Longstaff. A sense of self forunix processes. In Proceedings of the IEEE Symposium on Security and Privacy(S&amp;P), 1996. [18] B. Fraga. Swansea police pay $750 “ransom” after computer virus strikes. TheHerald News, 2013. [19] S. Garfinkel, P. Farrell, V. Roussev, and G. Dinolt. Bringing science to digitalforensics with standardized forensic corpora. Digital Investigation, 6, Supplement(0), 2009. [20] G. Gu, P. Porras, V. Yegneswaran, M. Fong, and W. Lee. BotHunter: detectingmalware infection through IDS-driven dialog correlation. In Proceedings of theUSENIX Security Symposium, 2007. [21] D. Hadˇziosmanovi′c, L. Simionato, D. Bolzoni, E. Zambon, and S. Etalle. N-gramagainst the machine: On the feasibility of the N-gram network analysis for binaryprotocols. In Proceedings of the International Symposium on Research in Attacks,Intrusion and Detection (RAID), 2012. [22] B. J. Hicks, A. Dong, R. Palmer, and H. C. Mcalpine. Organizing and managingpersonal electronic files: A mechanical engineer’s perspective. ACM Transactionson Information Systems (TOIS), 26(4), 2008. [23] S. A. Hofmeyr, S. Forrest, and A. Somayaji. Intrusion detection using sequencesof system calls. International Journal of Information and Computer Security,6(3), 1998. [24] S. Jana and V. Shmatikov. Abusing file processing in malware detectors for funand profit. In IEEE Symposium on Security and Privacy (S&amp;P), 2012. [25] A. Kharraz, W. Robertson, D. Balzarotti, L. Bilge, and E. Kirda. Cutting thegordian knot: A look under the hood of ransomware attacks. DIMVA, 2015. [26] G. H. Kim and E. H. Spafford. The design and implementation of tripwire: A filesystem integrity checker. In Proceedings of the ACM Conference on Computerand Communications Security, 1994. [27] J. Kornblum. Identifying almost identical files using context triggered piecewisehashing. Digital Investigation, 3, Supplement(0), 2006. [28] S. Kumar and E. H. Spafford. A generic virus scanner for c++. In Proceedingsof the Computer Security Applications Conference, 1992. [29] A. Lanzi, D. Balzarotti, C. Kruegel, M. Christodorescu, and E. Kirda. Access-Miner: Using system-centric models for malware protection. In Proceedings ofthe ACM Conference on Computer and Communications Security (CCS), 2010. [30] C. Lever, M. Antonakakis, B. Reaves, P. Traynor, and W. Lee. The core of thematter: Analyzing malicious traffic in cellular carriers. In Proceedings of theNetwork and Distributed System Security Symposium (NDSS), 2013. [31] R. Lyda and J. Hamrock. Using entropy analysis to find encrypted and packedmalware. IEEE Security and Privacy, 5(2), 2007. [32] D. Maiorca, I. Corona, and G. Giacinto. Looking at the bag is not enoughto find the bomb: An evasion of structural methods for malicious PDF filesdetection. In Proceedings of the ACM Symposium on Information, Computerand Communications Security, 2013. [33] J. A. P. Marpaung, M. Sain, and H.-J. Lee. Survey on malware evasion techniques:State of the art and challenges. In International Conference on AdvancedCommunication Technology (ICACT), 2012. [34] Y. Nadji, J. Giffin, and P. Traynor. Automated remote repair for mobile malware.In Proceedings of the Annual Computer Security Applications Conference(ACSAC). ACM, 2011. [35] J. Oberheide, M. Bailey, and F. Jahanian. PolyPack: An automated online packingservice for optimal antivirus evasion. In Proceedings of the USENIX Conferenceon Offensive Technologies, 2009. [36] J. Oberheide, E. Cooke, and F. Jahanian. CloudAV: N-Version antivirus in thenetwork cloud. In USENIX Security Symposium, 2008. [37] G. O’Gorman and G. McDonald. Ransomware: A growing menace. Technicalreport, Symantec Corporation, 2012. [38] A. Patcha and J.-M. Park. An overview of anomaly detection techniques: Existingsolutions and latest technological trends. Computer Networks, 51(12), 2007. [39] R. Perdisci, A. Lanzi, and W. Lee. Classification of packed executables foraccurate computer virus detection. Pattern recognition letters, 29(14), 2008. [40] V. Roussev. Data fingerprinting with similarity digests. In Advances in DigitalForensics VI, IFIP Advances in Information and Communication Technology.Springer Berlin Heidelberg, 2010. [41] N. Scaife, H. Carter, and P. Traynor. OnionDNS: A seizure-resistant top-leveldomain. In In IEEE Conference on Communications and Network Security (CNS),2015. [42] I. Sorokin. Comparing files using structural entropy. Journal in ComputerVirology, 7(4), 2011. [43] A. Tang, S. Sethumadhavan, and S. Stolfo. Unsupervised Anomaly-basedMalware Detection using Hardware Features. In Proceedings of the InternationalSymposium on Research in Attacks, Intrusion and Detection (RAID), 2014. [44] D. J. Tian, A. Bates, and K. Butler. Defending against malicious USB firmwarewith GoodUSB. In Proceedings of the Annual Computer Security ApplicationsConference (ACSAC). ACM, 2015. [45] P. Traynor, M. Chien, S. Weaver, B. Hicks, and P. McDaniel. Noninvasive methodsfor host certification. ACM Transactions on Information and System Security,11(3), 2008. [46] X. Ugarte-Pedrero, D. Balzarotti, I. Santos, P. G. Bringas, and S. Antipolis. SoK: Deep Packer Inspection : A Longitudinal Study of the Complexity of Run-TimePackers. In IEEE Symposium on Security and Privacy (S&amp;P), 2015. [47] A. Viswanathan, K. Tan, and C. Neuman. Deconstructing the assessment ofanomaly-based intrusion detectors. In Proceedings of the International Symposiumon Research in Attacks, Intrusion and Detection (RAID), 2013. [48] J. Walter. Meet tox: Ransomware for the rest of us. https://blogs.mcafee.com/mcafee-labs/meet-tox-ransomware-for-the-rest-of-us/, 2015. [49] C. Warrender, S. Forrest, and B. Pearlmutter. Detecting intrusions using systemcalls: alternative data models. In Proceedings of the IEEE Symposium on Securityand Privacy (S&amp;P), 1999. [50] H. Weisbaum. CryptoLocker crooks launch ‘customer service’ site. http://www.cnbc.com/id/101195861, 2013.]]></content>
  </entry>
  <entry>
    <title><![CDATA[SMS-短信加密程序]]></title>
    <url>%2F2017%2F05%2F14%2FSMS-%E7%9F%AD%E4%BF%A1%E5%8A%A0%E5%AF%86%E7%A8%8B%E5%BA%8F%2F</url>
    <content type="text"><![CDATA[目录 程序设计及编写 遇见的问题 一些加密算法的原理 收获（数据库的使用以及二维码） 短信加密分四步走（目标：实现前三步） 编写短信收发程序 实现AES加密 实现RSA/Diffi-Hellman的非对称加密的密钥交换 实现RSA签名（MAC技术） 一、程序设计1.发送过程设计：1.1 发送界面： 1.2 发送过程设计1.2.1使用过程设计 1234567891011121314151617如果不需要加密发送 直接输入电话号码和信息 点击发送否则 如果是第一次使用软件 生成自己的非对称密钥保存到自己数据库里面（后边的签名和对称密钥交换需要） 如果不是第一次使用该软件 如果需要和新人（不知道对方公钥的人）发送信息 输入“0”，查询自己的公钥 和对方交换公钥 输入对方的电话号码和公钥，保存对方的公钥 如果和已知对方公钥的好友发送信息 如果想要变换回话密钥或者第一次与对方通话 需要发送回话密钥给对方 否则 直接输入对方电话号码和信息 点击加密发送信息 1.2.2 使用细节设计 123456789发送：加密发送：发送密钥：生成非对称密钥：保运公钥：查询公钥： 2.接受过程设计2.1 接受界面 2.2 接受过程设计12接收到短信提取短信的信息和电话号码 二、程序具体实现1、编写短信收发程序1.1 发送短信12345678910111213//创建一个PendingIntent对象 PendingIntent pi = PendingIntent.getActivity(MainActivity.this, 0, new Intent(), 0); //发送短信 //短信具有字数限制，分条发送 ArrayList&lt;String&gt; list = sManager.divideMessage(content.getText().toString()); //因为一条短信有字数限制，因此要将长短信拆分 for(String text:list) &#123; sManager.sendTextMessage(number.getText().toString(), null, text, pi, null); &#125; // sManager.sendTextMessage(number.getText().toString(), null, content.getText().toString(), pi, null); //提示短信发送成功 Toast.makeText(MainActivity.this, &quot;短信发送成功&quot;, Toast.LENGTH_LONG).show(); 1.2接受短息系统受到短信之后欧会进行广播。Broadcast Reciver的使用AndroidManifest.xml文件需要注册Receiver 123456789 &lt;receiver android:name=&quot;.MessageReceiver&quot; android:enabled=&quot;true&quot; android:exported=&quot;true&quot; &gt; &lt;intent-filter android:priority=&quot;1000&quot;&gt; &lt;action android:name=&quot;android.provider.Telephony.SMS_RECEIVED&quot; /&gt;//只接受短信消息，优先级为1000，高于系统短信软件的。 &lt;/intent-filter&gt; &lt;/receiver&gt; 添加权限 123&lt;uses-permission android:name=&quot;android.permission.SEND_SMS&quot; /&gt;&lt;uses-permission android:name=&quot;android.permission.RECEIVE_SMS&quot; /&gt;&lt;uses-permission android:name=&quot;android.permission.READ_SMS&quot; /&gt; 接收短信代码(Onreceive) 123456789101112131415161718Bundle bundle = intent.getExtras();// 提取短信消息 Object[] pdus = (Object[]) bundle.get(&quot;pdus&quot;);SmsMessage[] messages = new SmsMessage[pdus.length];for (int i = 0; i &lt; messages.length; i++)&#123; messages[i] = SmsMessage.createFromPdu((byte[]) pdus[i]);&#125;String address = messages[0].getOriginatingAddress(); // 获取发送方号码 String fullMessage = &quot;&quot;;//合并短信for (SmsMessage message : messages) &#123; fullMessage += message.getMessageBody(); // 获取短信内容&#125; 二维码扫描：http://www.jianshu.com/p/e80a85b17920二维码生成：http://www.open-open.com/lib/view/open1433399323182.html 三、遇见的问题及解决方法1. Can’t bind to local 8600 for debuggerhttp://www.jb51.net/article/91027.htm 1、创建内部广播接收器类，接收系统发出的短信广播 2、从获得的内容中解析出短信发送者和短信内容 3、在Activity中注册广播 4、添加接收短信权限 解决IllegalBlockSizeException:last block incomplete in decryption异常http://www.cnblogs.com/zgqys1980/p/5342020.html 收到两条短信？？？手机给权限Mainfest文件中有几个activity就要加几个activity节点 1、甲方构建密钥对（公钥和私钥，公钥给对方，私钥留给自己） 2、甲方使用私钥加密数据，然后用私钥对加密后的数据签名，并把这些发送给乙方；乙方使用公钥、签名来验证待解密数据是否有效，如果有效使用公钥对数据解密。 3、乙方使用公钥加密数据，向甲方发送经过加密后的数据；甲方获得加密数据，通过私钥解密。使用数据库SQLiteDatabaseSQLiteOpenHelper是Android提供的一个管理数据库的工具类，可用于管理数据库的创建和版木更新。一般的用法是创建SQLiteOpenHelper的子类，并扩展它的onCreate (SQLiteDatabasedb)和 onUpgrade 从上面的方法介绍中不难看出，SQLiteOpenHelper提供了getReadableDatabase()、 getWritableDatabase()两个方法用于打开数据库连接，并提供了close方法来关闭数据库连接，而开发者需要做的就是重写它的两个抽象方法。 SQLiteDatabase db =helper.getWritableDatabase();Android的SQLiteDatabase 提供了 insert、upate、delete或 query 语句来操作数据库。使用对称密钥加密信息使用私钥加密对称密钥发送给对方公钥当面交换数据库一个表三个字段 电话号码、密钥、公钥or对称密钥特殊字段 电话号码为0 密钥为自己的公钥 1 密钥为自己的私钥 发送步骤（已经当面交换公钥）： 生成对称密钥1.1 将密钥转化成字符串(Base64.encoderToString())2、保存到数据库3、用私钥加密对称密钥3.1 从数据库中取出对方的公钥和相应的回话密钥3.11将密钥字符串转化成对象3.2 加密回话密钥3.3 信息头部+“密钥”3.4 发送4、用对称密钥加密发送信息4.1 取出会话密钥4.2 转化成Key对象4.3 初始化加密对象4.4 加密信息4.5 将密文采用Base64编码4.6 分条发送5、发送信息6、发送下一天=条信息，根据电话号码找到密钥，执行4、5接受步骤1、根据信息前部的字符串信息判断是密钥还是信息信息：加密信息：2、根据电话号码找到相应的密钥3、解密信息，显示在界面上未加密信息4、直接显示在界面上。密钥：5、显示在界面上6、查询数据库判断对称密钥是否已经存在存在7、根据电话号码找到相应的公钥8、解密信息9、替换 update不存在10、根据电话号码找到相应的公钥11、解密信息12、将密钥和电话号存入数据库RSA的原理 假设Alice想要通过一个不可靠的媒体接收Bob的一条私人讯息。她可以用以下的方式来产生一个公钥和一个私钥： 随意选择两个大的质数p和q，p不等于q，计算N=pq。 根据欧拉函数，求得r = (p-1)(q-1) 选择一个小于 r 的整数 e，求得 e 关于模 r 的模反元素，命名为d。（模反元素存在，当且仅当e与r互质） 将 p 和 q 的记录销毁。(N,e)是公钥，(N,d)是私钥。Alice将她的公钥(N,e)传给Bob，而将她的私钥(N,d)藏起来。c^d ≡ n (mod N)得到n后，她可以将原来的信息m重新复原。 解码的原理是： c^d ≡ n e·d(mod N) 以及ed ≡ 1 (mod p-1)和ed ≡ 1 (mod q-1)。由费马小定理可证明（因为p和q是质数） n^e·d ≡ n (mod p) 和 n^e·d ≡ n (mod q) 这说明（因为p和q是不同的质数，所以p和q互质） n^e·d ≡ n (mod pq)JDK中RSA的使用 Diffie–Hellman key exchange原理：A、B各自选择随机数Xa、XbA、B各自计算Ya、Yb交换Ya，YbA计算K＝Yb^Xa mod q B计算K’＝Ya^Xb mod q 事实上，K＝K’ JDK支持DH密钥协商由于JDK兼顾和统一了各种不同的密钥协商和管理机制，因此用法复杂。]]></content>
      <tags>
        <tag>tech</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[用Windows Server搭建AD域控制服务器]]></title>
    <url>%2F2017%2F05%2F12%2F%E7%94%A8Windows-Server%E6%90%AD%E5%BB%BAAD%E5%9F%9F%E6%8E%A7%E5%88%B6%E6%9C%8D%E5%8A%A1%E5%99%A8%2F</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title><![CDATA[hexo搭站笔记]]></title>
    <url>%2F2017%2F05%2F12%2Fhexo%E6%90%AD%E7%AB%99%E7%AC%94%E8%AE%B0%2F</url>
    <content type="text"><![CDATA[利用GitHub+Hexo搭建个人博客&ensp;&ensp;想想作为一名合格的程序员还是应该有自己的Blog的，虽然技术比较渣，但有些东西应该记录下来，方便自己以后用，说不定还是难忘的回忆，主要是可以装逼。参考教程（所有教程过程都是相似的） 如何搭建一个独立博客——简明Github Pages与Hexo教程 使用hexo+github搭建免费个人博客详细教程 一步步在GitHub上创建博客主页 目录 (分三步) 拥有一个GitHub账号（可以注册域名，然后绑定） 安装hexo（包括一系列配置） 布置属于自己的网站 1、拥有一个GitHub账号&ensp;&ensp;这个就不多说了去GitHub注册一个就好了。如果注册都不会还是放弃治疗吧。2、创建一个仓库&ensp;&ensp;(好懒啊不想贴图)但是不贴图怎么说得清楚字符效果和横线等 删除线 删除线（开启识别HTML标签时）斜体字 斜体字粗体 粗体粗斜体 粗斜体 上标：X2，下标：O2 缩写(同HTML的abbr标签) 即更长的单词或短语的缩写形式，前提是开启识别HTML标签时，已默认开启 The HTML specification is maintained by the W3C. 引用 Blockquotes 引用文本 Blockquotes 引用的行内混合 Blockquotes 引用：如果想要插入空白换行即&lt;br /&gt;标签，在插入处先键入两个以上的空格然后回车即可，普通链接。 锚点与链接 Links普通链接 普通链接带标题 直接链接：https://github.com 锚点链接 GFM a-tail link @pandao @pandao 多语言代码高亮 Codes行内代码 Inline code执行命令：npm install marked 缩进风格即缩进四个空格，也做为实现类似&lt;pre&gt;预格式化文本(Preformatted Text)的功能。 &lt;?php echo &quot;Hello world!&quot;; ?&gt; 预格式化文本： | First Header | Second Header | | ------------- | ------------- | | Content Cell | Content Cell | | Content Cell | Content Cell | JS代码 123456789101112131415161718192021222324252627282930313233343536function test()&#123; console.log("Hello world!");&#125; (function()&#123; var box = function()&#123; return box.fn.init(); &#125;; box.prototype = box.fn = &#123; init : function()&#123; console.log('box.init()'); return this; &#125;, add : function(str)&#123; alert("add", str); return this; &#125;, remove : function(str)&#123; alert("remove", str); return this; &#125; &#125;; box.fn.init.prototype = box.fn; window.box =box;&#125;)();var testBox = box();testBox.add("jQuery").remove("jQuery"); HTML代码 HTML codes12345678910&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;mate charest="utf-8" /&gt; &lt;title&gt;Hello world!&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;h1&gt;Hello world!&lt;/h1&gt; &lt;/body&gt;&lt;/html&gt; 图片 ImagesImage: Follow your heart. 图片加链接 (Image + Link)： 图为：李健首张专辑《似水流年》封面 列表 Lists无序列表（减号）Unordered Lists (-) 列表一 列表二 列表三 无序列表（星号）Unordered Lists (*) 列表一 列表二 列表三 无序列表（加号和嵌套）Unordered Lists (+) 列表一 列表二 列表二-1 列表二-2 列表二-3 列表三 列表一 列表二 列表三 有序列表 Ordered Lists (-) 第一行 第二行 第三行 GFM task list [x] GFM task list 1 [x] GFM task list 2 [ ] GFM task list 3 [ ] GFM task list 3-1 [ ] GFM task list 3-2 [ ] GFM task list 3-3 [ ] GFM task list 4 [ ] GFM task list 4-1 [ ] GFM task list 4-2 绘制表格 Tables 项目 价格 数量 计算机 $1600 5 手机 $12 12 管线 $1 234 First Header Second Header Content Cell Content Cell Content Cell Content Cell First Header Second Header Content Cell Content Cell Content Cell Content Cell Function name Description help() Display the help window. destroy() Destroy your computer! Left-Aligned Center Aligned Right Aligned col 3 is some wordy text $1600 col 2 is centered $12 zebra stripes are neat $1 Item Value Computer $1600 Phone $12 Pipe $1 特殊符号 HTML Entities Codes&copy; &amp; &uml; &trade; &iexcl; &pound;&amp; &lt; &gt; &yen; &euro; &reg; &plusmn; &para; &sect; &brvbar; &macr; &laquo; &middot; X&sup2; Y&sup3; &frac34; &frac14; &times; &divide; &raquo; 18&ordm;C &quot; &apos; Emoji表情 :smiley: Blockquotes :star: GFM task lists &amp; Emoji &amp; fontAwesome icon emoji &amp; editormd logo emoji :editormd-logo-5x: [x] :smiley: @mentions, :smiley: #refs, links, formatting, and tags supported :editormd-logo:; [x] list syntax required (any unordered or ordered list supported) :editormd-logo-3x:; [x] [ ] :smiley: this is a complete item :smiley:; [ ] []this is an incomplete item test link :fa-star: @pandao; [ ] [ ]this is an incomplete item :fa-star: :fa-gear:; [ ] :smiley: this is an incomplete item test link :fa-star: :fa-gear:; [ ] :smiley: this is :fa-star: :fa-gear: an incomplete item test link; 反斜杠 Escape*literal asterisks* 科学公式 TeX(KaTeX)$$E=mc^2$$ 行内的公式$$E=mc^2$$行内的公式，行内的$$E=mc^2$$公式。 $$(\sqrt{3x-1}+(1+x)^2)$$ $$\sin(\alpha)^{\theta}=\sum_{i=0}^{n}(x^i + \cos(f))$$ 多行公式： 12345\displaystyle\left( \sum\_&#123;k=1&#125;^n a\_k b\_k \right)^2\leq\left( \sum\_&#123;k=1&#125;^n a\_k^2 \right)\left( \sum\_&#123;k=1&#125;^n b\_k^2 \right) 123456789\displaystyle \frac&#123;1&#125;&#123; \Bigl(\sqrt&#123;\phi \sqrt&#123;5&#125;&#125;-\phi\Bigr) e^&#123; \frac25 \pi&#125;&#125; = 1+\frac&#123;e^&#123;-2\pi&#125;&#125; &#123;1+\frac&#123;e^&#123;-4\pi&#125;&#125; &#123; 1+\frac&#123;e^&#123;-6\pi&#125;&#125; &#123;1+\frac&#123;e^&#123;-8\pi&#125;&#125; &#123;1+\cdots&#125; &#125; &#125; &#125; 123f(x) = \int_&#123;-\infty&#125;^\infty \hat f(\xi)\,e^&#123;2 \pi i \xi x&#125; \,d\xi 绘制流程图 Flowchart12345678st=&gt;start: 用户登陆op=&gt;operation: 登陆操作cond=&gt;condition: 登陆成功 Yes or No?e=&gt;end: 进入后台st-&gt;op-&gt;condcond(yes)-&gt;econd(no)-&gt;op 绘制序列图 Sequence Diagram1234Andrew-&gt;China: Says Hello Note right of China: China thinks\nabout it China--&gt;Andrew: How are you? Andrew-&gt;&gt;China: I am good thanks! End]]></content>
      <tags>
        <tag>tech</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[我们应该泛滥]]></title>
    <url>%2F2017%2F05%2F11%2F%E6%88%91%E4%BB%AC%E5%BA%94%E8%AF%A5%E6%B3%9B%E6%BB%A5%2F</url>
    <content type="text"><![CDATA[生活像河流从西到东初中、高中、大学，我们迈着既定的步伐前进没有一点尝试没有一点泛滥风险最小就是最好适者生存是我们的法则我们遵循同样的法则总有一些离经叛道的人他们打破常规也许他们创造了世界也许他们即将被社会淘汰在我看来他们拯救了自己而我却没有勇气因为风险最小就是最好因为适者生存是我的法则生活就是温水但我还是害怕冷]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>Poem</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2017%2F05%2F11%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>